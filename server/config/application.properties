spring.message.encoding=UTF-8
server.port=8881

# h2适合开发使用，上线时请切换到mysql。切换时把下面h2部分配置注释掉，打开mysql部署配置。
##*********************** h2 DB begin ***************************
#spring.datasource.url=jdbc:h2:file:./daily_report;AUTO_SERVER=TRUE;MODE=MySQL
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driver-class-name=org.h2.Driver
#spring.jpa.database=h2
#spring.jpa.defer-datasource-initialization=true
#spring.sql.init.mode=always
##spring.sql.init.mode为always时，每次启动都会初始化resource目录下的data.sql日志，所以需要spring.sql.init.continue-on-error继续执行。
##如果上线，需要spring.sql.init.mode为false，然后手动初始化数据。
#spring.sql.init.continue-on-error=true
#spring.jpa.hibernate.ddl-auto=update
##*********************** h2 DB end ******************************

# mysql默认配置
# mysql需要手动创建数据库，mysql命令行下执行 create database application_server;
##*********************** mysql DB begin *************************
spring.datasource.url=jdbc:mysql://localhost:3306/daily_report?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database=mysql
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
##spring.sql.init.mode为always时，每次启动都会初始化resource目录下的data.sql日志，所以需要spring.sql.init.continue-on-error继续执行。
##如果上线，需要spring.sql.init.mode为false，然后手动初始化数据。
spring.sql.init.continue-on-error=true
spring.jpa.hibernate.ddl-auto=update
##*********************** mysql DB end ***************************

# 是否支持SSL，如果所有客户端调用appserver都支持https，请把下面开关设置为true，否则为false。
# 如果为false，在Web端和wx端的appserve的群公告等功能将不可用。
# 详情请参考 https://www.baidu.com/s?wd=cookie+SameSite&ie=utf-8
wfc.all_client_support_ssl=false

im.url=http://localhost
application.id=xxxxxxxx
application.secret=123456
